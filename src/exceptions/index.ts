export { default as RestClientBaseException, RestClientExceptionData } from './base.exception';
export { default as NetworkConnectionException } from './network.connection.exception';
export { default as ThrowNetworkConnectionException } from './throw.network.connection.exception';
export { default as Error301MovedPermanently } from './error.301.moved.permanently';
export { default as Error302Found } from './error.302.found';
export { default as Error303SeeOther } from './error.303.see.other';
export { default as Error304NotModified } from './error.304.not.modified';
export { default as Error305UseProxy } from './error.305.use.proxy';
export { default as Error306Unused } from './error.306.unused';
export { default as Error307TemporaryRedirect } from './error.307.temporary.redirect';
export { default as Error308PermanentRedirect } from './error.308.permanent.redirect';
export { default as Error400BadRequest } from './error.400.bad.request';
export { default as Error401Unauthorized } from './error.401.unauthorized';
export { default as Error402PaymentRequired } from './error.402.payment.required';
export { default as Error403Forbidden } from './error.403.forbidden';
export { default as Error404NotFound } from './error.404.not.found';
export { default as Error405MethodNotAllowed } from './error.405.method.not.allowed';
export { default as Error406NotAcceptable } from './error.406.not.acceptable';
export { default as Error407ProxyAuthenticationRequired } from './error.407.proxy.authentication.required';
export { default as Error408RequestTimeout } from './error.408.request.timeout';
export { default as Error409Conflict } from './error.409.conflict';
export { default as Error410Gone } from './error.410.gone';
export { default as Error411LengthRequired } from './error.411.length.required';
export { default as Error412PreconditionFailed } from './error.412.precondition.failed';
export { default as Error413RequestEntityTooLarge } from './error.413.request.entity.too.large';
export { default as Error414RequestURITooLong } from './error.414.request.uri.too.long';
export { default as Error415UnsupportedMediaType } from './error.415.unsupported.media.type';
export { default as Error416RequestedRangeNotSatisfiable } from './error.416.requested.range.not.satisfiable';
export { default as Error417ExpectationFailed } from './error.417.expectation.failed';
export { default as Error418ImaTeapot } from './error.418.im.a.teapot';
export { default as Error421MisdirectedRequest } from './error.421.misdirected.request';
export { default as Error422UnprocessableEntity } from './error.422.unprocessable.entity';
export { default as Error428PreconditionRequired } from './error.428.precondition.required';
export { default as Error429TooManyRequests } from './error.429.too.many.requests';
export { default as Error431RequestHeaderFieldsTooLarge } from './error.431.request.headers.fields.too.large';
export { default as Error451UnavailableForLegalReasons } from './error.451.unavailable.for.legal.reasons';
export { default as Error500InternalServerError } from './error.500.internal.server.error';
export { default as Error501NotImplemented } from './error.501.not.implemented';
export { default as Error502BadGateway } from './error.502.bad.gateway';
export { default as Error503ServiceUnavailable } from './error.503.service.unavailable';
export { default as Error504GatewayTimeout } from './error.504.gateway.timeout';
export { default as Error505HTTPVersionNotSupported } from './error.505.http.version.not.supported';
export { default as Error511NetworkAuthenticationRequired } from './error.511.network.authentication.required';
export { default as Error520WebServerIsReturningAnUnknownError } from './error.520.web.server.is.returning.an.unknown.error';
export { default as Error522ConnectionTimedOut } from './error.522.connection.timed.out';
export { default as Error524ATimeoutOccurred } from './error.524.a.timeout.occurred';
export { default as CreateException } from './create.exception';
export { default as ThrowException } from './throw.exception';
